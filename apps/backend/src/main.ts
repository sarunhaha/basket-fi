/**
 * @fileoverview Backend Main Entry Point - ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á NestJS API Server
 * 
 * ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô entry point ‡∏Ç‡∏≠‡∏á Basket.fi Backend API ‡∏ó‡∏µ‡πà:
 * - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ NestJS application
 * - ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ global validation pipes
 * - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î CORS policy
 * - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API prefix
 * - ‡∏™‡∏£‡πâ‡∏≤‡∏á Swagger documentation
 * - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô HTTP server
 * 
 * Backend ‡πÉ‡∏ä‡πâ NestJS framework ‡∏û‡∏£‡πâ‡∏≠‡∏° Prisma ORM ‡πÅ‡∏•‡∏∞ PostgreSQL
 */

import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

/**
 * Bootstrap function - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô NestJS application
 */
async function bootstrap() {
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á NestJS application instance
  const app = await NestFactory.create(AppModule);

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Global Validation Pipe ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö validate request data
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,           // ‡∏•‡∏ö properties ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ define ‡πÉ‡∏ô DTO
      forbidNonWhitelisted: true, // throw error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ properties ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ define
      transform: true,           // ‡πÅ‡∏õ‡∏•‡∏á plain objects ‡πÄ‡∏õ‡πá‡∏ô class instances
    }),
  );

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö frontend access
  app.enableCors({
    origin: process.env.CORS_ORIGIN || 'http://localhost:3000', // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï frontend domain
    credentials: true,         // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï cookies ‡πÅ‡∏•‡∏∞ credentials
  });

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API prefix (‡πÄ‡∏ä‡πà‡∏ô /api/v1)
  app.setGlobalPrefix(process.env.API_PREFIX || 'api/v1');

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Swagger API Documentation
  const config = new DocumentBuilder()
    .setTitle('Basket-Fi API')                                    // ‡∏ä‡∏∑‡πà‡∏≠ API
    .setDescription('API for creating and managing token baskets on Monad') // ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
    .setVersion('1.0')                                           // ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
    .addTag('baskets')                                           // Tags ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° endpoints
    .addTag('tokens')
    .addTag('users')
    .addTag('alerts')
    .build();
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Swagger document ‡πÅ‡∏•‡∏∞ setup UI
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('docs', app, document);                   // ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà /docs

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô HTTP server
  const port = process.env.PORT || 3001;
  await app.listen(port);
  
  console.log(`üöÄ Backend server running on http://localhost:${port}`);
  console.log(`üìö API documentation available at http://localhost:${port}/docs`);
}

bootstrap();